[
{
  "name":"com.carljmosca.AppConfig",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.carljmosca.MainView",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.github.javaparser.ast.body.FieldDeclaration",
  "allDeclaredFields":true}
,
{
  "name":"com.github.javaparser.ast.expr.VariableDeclarationExpr",
  "allDeclaredFields":true}
,
{
  "name":"com.vaadin.flow.component.AbstractField",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.AbstractSinglePropertyField",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.AttachNotifier",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.BlurNotifier",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.ClickEvent",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["com.vaadin.flow.component.Component","boolean","int","int","int","int","int","int","boolean","boolean","boolean","boolean"] }]}
,
{
  "name":"com.vaadin.flow.component.ClickNotifier",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.Component",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.CompositionNotifier",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.DetachNotifier",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.FocusNotifier",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.Focusable",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.HasComponents",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.HasElement",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.HasEnabled",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.HasHelper",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.HasOrderedComponents",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.HasSize",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.HasStyle",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.HasText",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.HasTheme",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.HasValidation",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.HasValue",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.HasValueAndElement",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.InputNotifier",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.KeyDownEvent",
  "queryAllPublicConstructors":true}
,
{
  "name":"com.vaadin.flow.component.KeyNotifier",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.PollEvent",
  "queryAllPublicConstructors":true}
,
{
  "name":"com.vaadin.flow.component.PollNotifier",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.UI",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.button.Button",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.button.GeneratedVaadinButton",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.internal.JavaScriptBootstrapUI",
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"connectClient","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","java.lang.String","elemental.json.JsonValue"] }
  ]}
,
{
  "name":"com.vaadin.flow.component.notification.GeneratedVaadinNotification",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.notification.Notification",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.orderedlayout.FlexComponent",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.orderedlayout.ThemableLayout",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.orderedlayout.VerticalLayout",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.textfield.GeneratedVaadinTextField",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.textfield.HasAutocapitalize",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.textfield.HasAutocomplete",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.textfield.HasAutocorrect",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.textfield.HasPrefixAndSuffix",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.component.textfield.TextField",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.data.value.HasValueChangeMode",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.router.RouterLayout",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.flow.theme.AbstractTheme",
  "methods":[{"name":"translateUrl","parameterTypes":["java.lang.String"] }]}
,
{
  "name":"com.vaadin.flow.theme.lumo.Lumo",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getBaseUrl","parameterTypes":[] }, 
    {"name":"getHeaderInlineContents","parameterTypes":[] }, 
    {"name":"getHtmlAttributes","parameterTypes":["java.lang.String"] }, 
    {"name":"getThemeUrl","parameterTypes":[] }
  ]}
,
{
  "name":"com.vaadin.quarkus.QuarkusVaadinServlet",
  "fields":[{"name":"beanManager"}]}
,
{
  "name":"com.vaadin.quarkus.annotation.VaadinServiceEnabled",
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.vaadin.quarkus.context.RouteScopedContext$ContextualStorageManager",
  "methods":[
    {"name":"onAfterNavigation","parameterTypes":["com.vaadin.flow.router.AfterNavigationEvent"] }, 
    {"name":"onBeforeEnter","parameterTypes":["com.vaadin.flow.router.BeforeEnterEvent"] }
  ]}
,
{
  "name":"com.vaadin.quarkus.context.RouteScopedContext$RouteContextualStorageManager",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.netty.bootstrap.ServerBootstrap$1"}
,
{
  "name":"io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
  "queriedMethods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]}
,
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "queryAllDeclaredMethods":true}
,
{
  "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt"}]}
,
{
  "name":"io.netty.channel.ChannelDuplexHandler",
  "queriedMethods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]}
,
{
  "name":"io.netty.channel.ChannelHandlerAdapter",
  "queriedMethods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]}
,
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "queriedMethods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]}
,
{
  "name":"io.netty.channel.ChannelInitializer",
  "queriedMethods":[
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]}
,
{
  "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
  "queriedMethods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]}
,
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "queriedMethods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]}
,
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "queriedMethods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]}
,
{
  "name":"io.netty.handler.codec.ByteToMessageDecoder",
  "queriedMethods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]}
,
{
  "name":"io.netty.handler.codec.MessageToMessageEncoder",
  "queriedMethods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]}
,
{
  "name":"io.netty.handler.codec.haproxy.HAProxyMessageDecoder"}
,
{
  "name":"io.netty.handler.codec.http.HttpObjectDecoder",
  "queriedMethods":[{"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]}
,
{
  "name":"io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler",
  "queriedMethods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]}
,
{
  "name":"io.netty.handler.timeout.IdleStateHandler",
  "queriedMethods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]}
,
{
  "name":"io.netty.util.ReferenceCountUtil",
  "queryAllDeclaredMethods":true}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex"}]}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex"}]}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit"}]}
,
{
  "name":"io.quarkus.runner.ApplicationImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.quarkus.runtime.logging.InheritableLevel",
  "methods":[{"name":"of","parameterTypes":["java.lang.String"] }]}
,
{
  "name":"io.smallrye.config.ConfigMessages_$bundle",
  "fields":[{"name":"INSTANCE"}]}
,
{
  "name":"io.smallrye.config.PropertiesLocationConfigSourceFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.smallrye.context.api.ManagedExecutorConfig",
  "queryAllDeclaredMethods":true}
,
{
  "name":"io.vertx.core.http.impl.Http1xOrH2CHandler",
  "queriedMethods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]}
,
{
  "name":"io.vertx.core.http.impl.Http1xUpgradeToH2CHandler",
  "queriedMethods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]}
,
{
  "name":"io.vertx.core.http.impl.HttpServerWorker$1",
  "queriedMethods":[
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]}
,
{
  "name":"io.vertx.core.http.impl.VertxHttpRequestDecoder"}
,
{
  "name":"io.vertx.core.http.impl.VertxHttpResponseEncoder"}
,
{
  "name":"io.vertx.core.logging.SLF4JLogDelegateFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.vertx.core.net.impl.ServerChannelLoadBalancer"}
,
{
  "name":"io.vertx.core.net.impl.VertxHandler",
  "queriedMethods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]}
,
{
  "name":"java.io.File",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]}
,
{
  "name":"java.io.Serializable",
  "queryAllDeclaredMethods":true}
,
{
  "name":"java.lang.Thread",
  "fields":[
    {"name":"contextClassLoader"}, 
    {"name":"inheritableThreadLocals"}, 
    {"name":"threadLocals"}
  ]}
,
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]}
,
{
  "name":"java.lang.management.RuntimeMXBean",
  "methods":[
    {"name":"getInputArguments","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }
  ]}
,
{
  "name":"java.nio.Bits",
  "fields":[{"name":"UNALIGNED"}]}
,
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]}
,
{
  "name":"java.nio.ByteBuffer",
  "queriedMethods":[{"name":"alignedSlice","parameterTypes":["int"] }]}
,
{
  "name":"java.nio.DirectByteBuffer",
  "queriedMethods":[{"name":"<init>","parameterTypes":["long","int"] }]}
,
{
  "name":"java.security.SecureRandomParameters"}
,
{
  "name":"javax.enterprise.context.BeforeDestroyed",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"javax.enterprise.context.Destroyed",
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"javax.enterprise.inject.Any",
  "queryAllDeclaredMethods":true}
,
{
  "name":"javax.net.ssl.SSLEngine",
  "queriedMethods":[{"name":"getApplicationProtocol","parameterTypes":[] }]}
,
{
  "name":"javax.servlet.http.HttpServletResponse",
  "allDeclaredFields":true}
,
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]}
,
{
  "name":"org.jboss.resteasy.microprofile.config.FilterConfigSource",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.jboss.resteasy.microprofile.config.FilterConfigSourceImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.jboss.resteasy.microprofile.config.ServletConfigSource",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.jboss.resteasy.microprofile.config.ServletConfigSourceImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.jboss.resteasy.microprofile.config.ServletContextConfigSource",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.jboss.resteasy.microprofile.config.ServletContextConfigSourceImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.jboss.threads.EnhancedQueueExecutor",
  "fields":[
    {"name":"activeCount"}, 
    {"name":"peakQueueSize"}, 
    {"name":"peakThreadCount"}, 
    {"name":"queueSize"}, 
    {"name":"terminationWaiters"}
  ]}
,
{
  "name":"org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode",
  "fields":[
    {"name":"parked"}, 
    {"name":"task"}
  ]}
,
{
  "name":"org.jboss.threads.EnhancedQueueExecutor$QNode",
  "fields":[{"name":"next"}]}
,
{
  "name":"org.jboss.threads.EnhancedQueueExecutorBase1",
  "fields":[{"name":"tail"}]}
,
{
  "name":"org.jboss.threads.EnhancedQueueExecutorBase3",
  "fields":[{"name":"head"}]}
,
{
  "name":"org.jboss.threads.EnhancedQueueExecutorBase5",
  "fields":[{"name":"threadStatus"}]}
,
{
  "name":"org.jboss.threads.Messages_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]}
,
{
  "name":"sun.misc.Unsafe",
  "fields":[{"name":"theUnsafe"}],
  "methods":[{"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }],
  "queriedMethods":[
    {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, 
    {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, 
    {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }
  ]}
,
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[
    {"name":"publicSelectedKeys"}, 
    {"name":"selectedKeys"}
  ]}
,
{
  "name":"sun.security.provider.MD5",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]}

]
